"""Add uniqueness constraint to all names in reference tables

Revision ID: ce68ca5be4cd
Revises: 5154f7db278d
Create Date: 2020-05-14 15:44:14.760191

"""
from alembic import op

# revision identifiers, used by Alembic.
revision = "ce68ca5be4cd"
down_revision = "5154f7db278d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("ClassificationTypes", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(
            batch_op.f("uq_ClassificationTypes_class_type"), ["class_type"]
        )

    with op.batch_alter_table("CommentTypes", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_CommentTypes_name"), ["name"])

    with op.batch_alter_table("CommodityTypes", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_CommodityTypes_name"), ["name"])

    with op.batch_alter_table("ConfidenceLevels", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_ConfidenceLevels_level"), ["level"])

    with op.batch_alter_table("ContactTypes", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(
            batch_op.f("uq_ContactTypes_contact_type"), ["contact_type"]
        )

    with op.batch_alter_table("DatafileTypes", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_DatafileTypes_name"), ["name"])

    with op.batch_alter_table("GeometrySubTypes", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_GeometrySubTypes_name"), ["name"])

    with op.batch_alter_table("GeometryTypes", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_GeometryTypes_name"), ["name"])

    with op.batch_alter_table("MediaTypes", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_MediaTypes_name"), ["name"])

    with op.batch_alter_table("Nationalities", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_Nationalities_name"), ["name"])

    with op.batch_alter_table("PlatformTypes", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_PlatformTypes_name"), ["name"])

    with op.batch_alter_table("Privacies", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_Privacies_name"), ["name"])

    with op.batch_alter_table("SensorTypes", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_SensorTypes_name"), ["name"])

    with op.batch_alter_table("UnitTypes", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_UnitTypes_units"), ["units"])

    with op.batch_alter_table("Users", schema="pepys") as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_Users_name"), ["name"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("Users", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_Users_name"), type_="unique")

    with op.batch_alter_table("UnitTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_UnitTypes_units"), type_="unique")

    with op.batch_alter_table("SensorTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_SensorTypes_name"), type_="unique")

    with op.batch_alter_table("Privacies", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_Privacies_name"), type_="unique")

    with op.batch_alter_table("PlatformTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_PlatformTypes_name"), type_="unique")

    with op.batch_alter_table("Nationalities", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_Nationalities_name"), type_="unique")

    with op.batch_alter_table("MediaTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_MediaTypes_name"), type_="unique")

    with op.batch_alter_table("GeometryTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_GeometryTypes_name"), type_="unique")

    with op.batch_alter_table("GeometrySubTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_GeometrySubTypes_name"), type_="unique")

    with op.batch_alter_table("DatafileTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_DatafileTypes_name"), type_="unique")

    with op.batch_alter_table("ContactTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_ContactTypes_contact_type"), type_="unique")

    with op.batch_alter_table("ConfidenceLevels", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_ConfidenceLevels_level"), type_="unique")

    with op.batch_alter_table("CommodityTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_CommodityTypes_name"), type_="unique")

    with op.batch_alter_table("CommentTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_CommentTypes_name"), type_="unique")

    with op.batch_alter_table("ClassificationTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_ClassificationTypes_class_type"), type_="unique")

    # ### end Alembic commands ###
