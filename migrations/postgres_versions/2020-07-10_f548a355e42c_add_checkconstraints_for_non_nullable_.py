"""Add CheckConstraints for non-nullable string cols

Revision ID: f548a355e42c
Revises: b311affac706
Create Date: 2020-07-10 13:47:58.532274

"""
import geoalchemy2
import sqlalchemy as sa
from alembic import op

import pepys_import

# revision identifiers, used by Alembic.
revision = "f548a355e42c"
down_revision = "b311affac706"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("UnitTypes", schema="pepys") as batch_op:
        batch_op.alter_column(column_name="units", new_column_name="name")
        batch_op.create_unique_constraint(batch_op.f("uq_UnitTypes_name"), ["name"])
        batch_op.drop_constraint("uq_UnitTypes_units", type_="unique")

    with op.batch_alter_table("Tasks", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_Tasks_name", condition="name <> ''")

    with op.batch_alter_table("Synonyms", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_Synonyms_table", condition="\"table\" <> ''")
        batch_op.create_check_constraint("ck_Synonyms_synonym", condition="synonym <> ''")

    with op.batch_alter_table("Changes", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_Changes_user", condition="user <> ''")
        batch_op.create_check_constraint("ck_Changes_reason", condition="reason <> ''")

    with op.batch_alter_table("Logs", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_Logs_table", condition="\"table\" <> ''")

    with op.batch_alter_table("PlatformTypes", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_PlatformTypes_name", condition="name <> ''")

    with op.batch_alter_table("Nationalities", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_Nationalities_name", condition="name <> ''")

    with op.batch_alter_table("GeometryTypes", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_GeometryTypes_name", condition="name <> ''")

    with op.batch_alter_table("GeometrySubTypes", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_GeometrySubTypes_name", condition="name <> ''")

    with op.batch_alter_table("Users", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_Users_name", condition="name <> ''")

    with op.batch_alter_table("UnitTypes", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_UnitTypes_name", condition="name <> ''")

    with op.batch_alter_table("ClassificationTypes", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_ClassificationTypes_name", condition="name <> ''")

    with op.batch_alter_table("ContactTypes", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_ContactTypes_name", condition="name <> ''")

    with op.batch_alter_table("SensorTypes", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_SensorTypes_name", condition="name <> ''")

    with op.batch_alter_table("Privacies", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_Privacies_name", condition="name <> ''")

    with op.batch_alter_table("DatafileTypes", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_DatafileTypes_name", condition="name <> ''")

    with op.batch_alter_table("MediaTypes", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_MediaTypes_name", condition="name <> ''")

    with op.batch_alter_table("CommentTypes", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_CommentTypes_name", condition="name <> ''")

    with op.batch_alter_table("CommodityTypes", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_CommodityTypes_name", condition="name <> ''")

    with op.batch_alter_table("ConfidenceLevels", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_ConfidenceLevels_name", condition="name <> ''")

    with op.batch_alter_table("Comments", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_Comments_content", condition="content <> ''")

    with op.batch_alter_table("Media", schema="pepys") as batch_op:
        batch_op.create_check_constraint("ck_Media_url", condition="url <> ''")


def downgrade():
    with op.batch_alter_table("UnitTypes", schema="pepys") as batch_op:
        batch_op.alter_column(column_name="name", new_column_name="units")
        batch_op.create_unique_constraint("uq_UnitTypes_units", ["units"])
        batch_op.drop_constraint(batch_op.f("uq_UnitTypes_name"), type_="unique")

    with op.batch_alter_table("Tasks", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_Tasks_name", type_="check")

    with op.batch_alter_table("Synonyms", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_Synonyms_table", type_="check")
        batch_op.drop_constraint("ck_Synonyms_synonym", type_="check")

    with op.batch_alter_table("Changes", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_Changes_user", type_="check")
        batch_op.drop_constraint("ck_Changes_reason", type_="check")

    with op.batch_alter_table("Logs", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_Logs_table", type_="check")

    with op.batch_alter_table("PlatformTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_PlatformTypes_name", type_="check")

    with op.batch_alter_table("Nationalities", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_Nationalities_name", type_="check")

    with op.batch_alter_table("GeometryTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_GeometryTypes_name", type_="check")

    with op.batch_alter_table("GeometrySubTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_GeometrySubTypes_name", type_="check")

    with op.batch_alter_table("Users", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_Users_name", type_="check")

    with op.batch_alter_table("UnitTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_UnitTypes_name", type_="check")

    with op.batch_alter_table("ClassificationTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_ClassificationTypes_name", type_="check")

    with op.batch_alter_table("ContactTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_ContactTypes_name", type_="check")

    with op.batch_alter_table("SensorTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_SensorTypes_name", type_="check")

    with op.batch_alter_table("Privacies", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_Privacies_name", type_="check")

    with op.batch_alter_table("DatafileTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_DatafileTypes_name", type_="check")

    with op.batch_alter_table("MediaTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_MediaTypes_name", type_="check")

    with op.batch_alter_table("CommentTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_CommentTypes_name", type_="check")

    with op.batch_alter_table("CommodityTypes", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_CommodityTypes_name", type_="check")

    with op.batch_alter_table("ConfidenceLevels", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_ConfidenceLevels_name", type_="check")

    with op.batch_alter_table("Comments", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_Comments_content", type_="check")

    with op.batch_alter_table("Media", schema="pepys") as batch_op:
        batch_op.drop_constraint("ck_Media_url", type_="check")
