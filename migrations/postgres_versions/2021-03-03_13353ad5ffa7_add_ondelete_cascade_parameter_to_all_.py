"""Add ondelete=cascade parameter to all foreign key relationships

Revision ID: 13353ad5ffa7
Revises: 0f8d24a830d0
Create Date: 2021-03-03 10:46:12.305311+00:00

"""
from alembic import op

# revision identifiers, used by Alembic.
revision = "13353ad5ffa7"
down_revision = "0f8d24a830d0"
branch_labels = None
depends_on = None


def upgrade():
    op.drop_constraint(
        "fk_Activations_privacy_id_Privacies", "Activations", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_Activations_sensor_id_Sensors", "Activations", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_Activations_sensor_id_Sensors"),
        "Activations",
        "Sensors",
        ["sensor_id"],
        ["sensor_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Activations_privacy_id_Privacies"),
        "Activations",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint(
        "fk_Comments_comment_type_id_CommentTypes", "Comments", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_Comments_platform_id_Platforms", "Comments", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_Comments_privacy_id_Privacies", "Comments", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_Comments_comment_type_id_CommentTypes"),
        "Comments",
        "CommentTypes",
        ["comment_type_id"],
        ["comment_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Comments_platform_id_Platforms"),
        "Comments",
        "Platforms",
        ["platform_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Comments_privacy_id_Privacies"),
        "Comments",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint(
        "fk_Contacts_subject_id_Platforms", "Contacts", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_Contacts_sensor_id_Sensors", "Contacts", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_Contacts_privacy_id_Privacies", "Contacts", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_Contacts_sensor_id_Sensors"),
        "Contacts",
        "Sensors",
        ["sensor_id"],
        ["sensor_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Contacts_subject_id_Platforms"),
        "Contacts",
        "Platforms",
        ["subject_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Contacts_privacy_id_Privacies"),
        "Contacts",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint(
        "fk_Datafiles_datafile_type_id_DatafileTypes",
        "Datafiles",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_Datafiles_privacy_id_Privacies", "Datafiles", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_Datafiles_datafile_type_id_DatafileTypes"),
        "Datafiles",
        "DatafileTypes",
        ["datafile_type_id"],
        ["datafile_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Datafiles_privacy_id_Privacies"),
        "Datafiles",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint(
        "fk_Geometries_sensor_platform_id_Platforms",
        "Geometries",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_Geometries_geo_sub_type_id_GeometrySubTypes",
        "Geometries",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_Geometries_privacy_id_Privacies", "Geometries", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_Geometries_subject_platform_id_Platforms",
        "Geometries",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_Geometries_geo_type_id_GeometryTypes", "Geometries", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_Geometries_task_id_Tasks", "Geometries", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_Geometries_task_id_Tasks"),
        "Geometries",
        "Tasks",
        ["task_id"],
        ["task_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Geometries_geo_type_id_GeometryTypes"),
        "Geometries",
        "GeometryTypes",
        ["geo_type_id"],
        ["geo_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Geometries_sensor_platform_id_Platforms"),
        "Geometries",
        "Platforms",
        ["sensor_platform_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Geometries_privacy_id_Privacies"),
        "Geometries",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Geometries_geo_sub_type_id_GeometrySubTypes"),
        "Geometries",
        "GeometrySubTypes",
        ["geo_sub_type_id"],
        ["geo_sub_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Geometries_subject_platform_id_Platforms"),
        "Geometries",
        "Platforms",
        ["subject_platform_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint(
        "fk_GeometrySubTypes_parent_GeometryTypes",
        "GeometrySubTypes",
        schema="pepys",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_GeometrySubTypes_parent_GeometryTypes"),
        "GeometrySubTypes",
        "GeometryTypes",
        ["parent"],
        ["geo_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint(
        "fk_HostedBy_subject_id_Platforms", "HostedBy", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_HostedBy_privacy_id_Privacies", "HostedBy", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_HostedBy_host_id_Platforms", "HostedBy", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_HostedBy_host_id_Platforms"),
        "HostedBy",
        "Platforms",
        ["host_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_HostedBy_privacy_id_Privacies"),
        "HostedBy",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_HostedBy_subject_id_Platforms"),
        "HostedBy",
        "Platforms",
        ["subject_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint("fk_Logs_change_id_Changes", "Logs", schema="pepys", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_Logs_change_id_Changes"),
        "Logs",
        "Changes",
        ["change_id"],
        ["change_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint(
        "fk_LogsHoldings_unit_type_id_UnitTypes", "LogsHoldings", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_LogsHoldings_privacy_id_Privacies", "LogsHoldings", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_LogsHoldings_platform_id_Platforms", "LogsHoldings", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_LogsHoldings_commodity_id_CommodityTypes",
        "LogsHoldings",
        schema="pepys",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_LogsHoldings_platform_id_Platforms"),
        "LogsHoldings",
        "Platforms",
        ["platform_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_LogsHoldings_unit_type_id_UnitTypes"),
        "LogsHoldings",
        "UnitTypes",
        ["unit_type_id"],
        ["unit_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_LogsHoldings_commodity_id_CommodityTypes"),
        "LogsHoldings",
        "CommodityTypes",
        ["commodity_id"],
        ["commodity_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_LogsHoldings_privacy_id_Privacies"),
        "LogsHoldings",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint(
        "fk_Media_platform_id_Platforms", "Media", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint("fk_Media_sensor_id_Sensors", "Media", schema="pepys", type_="foreignkey")
    op.drop_constraint(
        "fk_Media_media_type_id_MediaTypes", "Media", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint("fk_Media_subject_id_Platforms", "Media", schema="pepys", type_="foreignkey")
    op.drop_constraint("fk_Media_privacy_id_Privacies", "Media", schema="pepys", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_Media_sensor_id_Sensors"),
        "Media",
        "Sensors",
        ["sensor_id"],
        ["sensor_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Media_subject_id_Platforms"),
        "Media",
        "Platforms",
        ["subject_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Media_platform_id_Platforms"),
        "Media",
        "Platforms",
        ["platform_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Media_privacy_id_Privacies"),
        "Media",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Media_media_type_id_MediaTypes"),
        "Media",
        "MediaTypes",
        ["media_type_id"],
        ["media_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint(
        "fk_Participants_privacy_id_Privacies", "Participants", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_Participants_platform_id_Platforms", "Participants", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_Participants_task_id_Tasks", "Participants", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_Participants_platform_id_Platforms"),
        "Participants",
        "Platforms",
        ["platform_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Participants_privacy_id_Privacies"),
        "Participants",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Participants_task_id_Tasks"),
        "Participants",
        "Tasks",
        ["task_id"],
        ["task_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint(
        "fk_Platforms_privacy_id_Privacies", "Platforms", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_Platforms_nationality_id_Nationalities", "Platforms", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_Platforms_platform_type_id_PlatformTypes",
        "Platforms",
        schema="pepys",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_Platforms_platform_type_id_PlatformTypes"),
        "Platforms",
        "PlatformTypes",
        ["platform_type_id"],
        ["platform_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Platforms_privacy_id_Privacies"),
        "Platforms",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Platforms_nationality_id_Nationalities"),
        "Platforms",
        "Nationalities",
        ["nationality_id"],
        ["nationality_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint(
        "fk_Sensors_sensor_type_id_SensorTypes", "Sensors", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_Sensors_privacy_id_Privacies", "Sensors", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_Sensors_privacy_id_Privacies"),
        "Sensors",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Sensors_sensor_type_id_SensorTypes"),
        "Sensors",
        "SensorTypes",
        ["sensor_type_id"],
        ["sensor_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint("fk_States_sensor_id_Sensors", "States", schema="pepys", type_="foreignkey")
    op.drop_constraint(
        "fk_States_privacy_id_Privacies", "States", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_States_sensor_id_Sensors"),
        "States",
        "Sensors",
        ["sensor_id"],
        ["sensor_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_States_privacy_id_Privacies"),
        "States",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint(
        "fk_TaggedItems_tag_id_Tags", "TaggedItems", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        "fk_TaggedItems_tagged_by_id_Users", "TaggedItems", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_TaggedItems_tag_id_Tags"),
        "TaggedItems",
        "Tags",
        ["tag_id"],
        ["tag_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_TaggedItems_tagged_by_id_Users"),
        "TaggedItems",
        "Users",
        ["tagged_by_id"],
        ["user_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.drop_constraint("fk_Tasks_privacy_id_Privacies", "Tasks", schema="pepys", type_="foreignkey")
    op.drop_constraint("fk_Tasks_parent_id_Tasks", "Tasks", schema="pepys", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_Tasks_parent_id_Tasks"),
        "Tasks",
        "Tasks",
        ["parent_id"],
        ["task_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )
    op.create_foreign_key(
        op.f("fk_Tasks_privacy_id_Privacies"),
        "Tasks",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="cascade",
        ondelete="cascade",
    )


def downgrade():
    op.drop_constraint(
        op.f("fk_Tasks_privacy_id_Privacies"), "Tasks", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Tasks_parent_id_Tasks"), "Tasks", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_Tasks_parent_id_Tasks",
        "Tasks",
        "Tasks",
        ["parent_id"],
        ["task_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Tasks_privacy_id_Privacies",
        "Tasks",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_TaggedItems_tagged_by_id_Users"), "TaggedItems", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_TaggedItems_tag_id_Tags"), "TaggedItems", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_TaggedItems_tagged_by_id_Users",
        "TaggedItems",
        "Users",
        ["tagged_by_id"],
        ["user_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_TaggedItems_tag_id_Tags",
        "TaggedItems",
        "Tags",
        ["tag_id"],
        ["tag_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_States_privacy_id_Privacies"), "States", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_States_sensor_id_Sensors"), "States", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_States_privacy_id_Privacies",
        "States",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_States_sensor_id_Sensors",
        "States",
        "Sensors",
        ["sensor_id"],
        ["sensor_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_Sensors_sensor_type_id_SensorTypes"), "Sensors", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Sensors_privacy_id_Privacies"), "Sensors", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_Sensors_privacy_id_Privacies",
        "Sensors",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Sensors_sensor_type_id_SensorTypes",
        "Sensors",
        "SensorTypes",
        ["sensor_type_id"],
        ["sensor_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_Platforms_nationality_id_Nationalities"),
        "Platforms",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_Platforms_privacy_id_Privacies"), "Platforms", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Platforms_platform_type_id_PlatformTypes"),
        "Platforms",
        schema="pepys",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_Platforms_platform_type_id_PlatformTypes",
        "Platforms",
        "PlatformTypes",
        ["platform_type_id"],
        ["platform_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Platforms_nationality_id_Nationalities",
        "Platforms",
        "Nationalities",
        ["nationality_id"],
        ["nationality_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Platforms_privacy_id_Privacies",
        "Platforms",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_Participants_task_id_Tasks"), "Participants", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Participants_privacy_id_Privacies"),
        "Participants",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_Participants_platform_id_Platforms"),
        "Participants",
        schema="pepys",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_Participants_task_id_Tasks",
        "Participants",
        "Tasks",
        ["task_id"],
        ["task_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Participants_platform_id_Platforms",
        "Participants",
        "Platforms",
        ["platform_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Participants_privacy_id_Privacies",
        "Participants",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_Media_media_type_id_MediaTypes"), "Media", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Media_privacy_id_Privacies"), "Media", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Media_platform_id_Platforms"), "Media", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Media_subject_id_Platforms"), "Media", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Media_sensor_id_Sensors"), "Media", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_Media_privacy_id_Privacies",
        "Media",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Media_subject_id_Platforms",
        "Media",
        "Platforms",
        ["subject_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Media_media_type_id_MediaTypes",
        "Media",
        "MediaTypes",
        ["media_type_id"],
        ["media_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Media_sensor_id_Sensors",
        "Media",
        "Sensors",
        ["sensor_id"],
        ["sensor_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Media_platform_id_Platforms",
        "Media",
        "Platforms",
        ["platform_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_LogsHoldings_privacy_id_Privacies"),
        "LogsHoldings",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_LogsHoldings_commodity_id_CommodityTypes"),
        "LogsHoldings",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_LogsHoldings_unit_type_id_UnitTypes"),
        "LogsHoldings",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_LogsHoldings_platform_id_Platforms"),
        "LogsHoldings",
        schema="pepys",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_LogsHoldings_commodity_id_CommodityTypes",
        "LogsHoldings",
        "CommodityTypes",
        ["commodity_id"],
        ["commodity_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_LogsHoldings_platform_id_Platforms",
        "LogsHoldings",
        "Platforms",
        ["platform_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_LogsHoldings_privacy_id_Privacies",
        "LogsHoldings",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_LogsHoldings_unit_type_id_UnitTypes",
        "LogsHoldings",
        "UnitTypes",
        ["unit_type_id"],
        ["unit_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_Logs_change_id_Changes"), "Logs", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_Logs_change_id_Changes",
        "Logs",
        "Changes",
        ["change_id"],
        ["change_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_HostedBy_subject_id_Platforms"), "HostedBy", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_HostedBy_privacy_id_Privacies"), "HostedBy", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_HostedBy_host_id_Platforms"), "HostedBy", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_HostedBy_host_id_Platforms",
        "HostedBy",
        "Platforms",
        ["host_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_HostedBy_privacy_id_Privacies",
        "HostedBy",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_HostedBy_subject_id_Platforms",
        "HostedBy",
        "Platforms",
        ["subject_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_GeometrySubTypes_parent_GeometryTypes"),
        "GeometrySubTypes",
        schema="pepys",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_GeometrySubTypes_parent_GeometryTypes",
        "GeometrySubTypes",
        "GeometryTypes",
        ["parent"],
        ["geo_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_Geometries_subject_platform_id_Platforms"),
        "Geometries",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_Geometries_geo_sub_type_id_GeometrySubTypes"),
        "Geometries",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_Geometries_privacy_id_Privacies"), "Geometries", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Geometries_sensor_platform_id_Platforms"),
        "Geometries",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_Geometries_geo_type_id_GeometryTypes"),
        "Geometries",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_Geometries_task_id_Tasks"), "Geometries", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_Geometries_task_id_Tasks",
        "Geometries",
        "Tasks",
        ["task_id"],
        ["task_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Geometries_geo_type_id_GeometryTypes",
        "Geometries",
        "GeometryTypes",
        ["geo_type_id"],
        ["geo_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Geometries_subject_platform_id_Platforms",
        "Geometries",
        "Platforms",
        ["subject_platform_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Geometries_privacy_id_Privacies",
        "Geometries",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Geometries_geo_sub_type_id_GeometrySubTypes",
        "Geometries",
        "GeometrySubTypes",
        ["geo_sub_type_id"],
        ["geo_sub_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Geometries_sensor_platform_id_Platforms",
        "Geometries",
        "Platforms",
        ["sensor_platform_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_Datafiles_privacy_id_Privacies"), "Datafiles", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Datafiles_datafile_type_id_DatafileTypes"),
        "Datafiles",
        schema="pepys",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_Datafiles_privacy_id_Privacies",
        "Datafiles",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Datafiles_datafile_type_id_DatafileTypes",
        "Datafiles",
        "DatafileTypes",
        ["datafile_type_id"],
        ["datafile_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_Contacts_privacy_id_Privacies"), "Contacts", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Contacts_subject_id_Platforms"), "Contacts", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Contacts_sensor_id_Sensors"), "Contacts", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_Contacts_privacy_id_Privacies",
        "Contacts",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Contacts_sensor_id_Sensors",
        "Contacts",
        "Sensors",
        ["sensor_id"],
        ["sensor_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Contacts_subject_id_Platforms",
        "Contacts",
        "Platforms",
        ["subject_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_Comments_privacy_id_Privacies"), "Comments", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Comments_platform_id_Platforms"), "Comments", schema="pepys", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_Comments_comment_type_id_CommentTypes"),
        "Comments",
        schema="pepys",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_Comments_privacy_id_Privacies",
        "Comments",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Comments_platform_id_Platforms",
        "Comments",
        "Platforms",
        ["platform_id"],
        ["platform_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Comments_comment_type_id_CommentTypes",
        "Comments",
        "CommentTypes",
        ["comment_type_id"],
        ["comment_type_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_Activations_privacy_id_Privacies"),
        "Activations",
        schema="pepys",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_Activations_sensor_id_Sensors"), "Activations", schema="pepys", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_Activations_sensor_id_Sensors",
        "Activations",
        "Sensors",
        ["sensor_id"],
        ["sensor_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
    op.create_foreign_key(
        "fk_Activations_privacy_id_Privacies",
        "Activations",
        "Privacies",
        ["privacy_id"],
        ["privacy_id"],
        source_schema="pepys",
        referent_schema="pepys",
        onupdate="CASCADE",
    )
