"""Add level attribute to Privacies Table

Revision ID: b03fb305981b
Revises: f103f27c4575
Create Date: 2020-06-05 12:43:44.318254

"""
from datetime import datetime
from uuid import uuid4

import sqlalchemy as sa
from alembic import op
from sqlalchemy import Column, DateTime, Integer, MetaData, String
from sqlalchemy.ext.declarative import declarative_base

from pepys_import.core.store import constants
from pepys_import.core.store.db_base import sqlite_naming_convention
from pepys_import.core.store.db_status import TableTypes
from pepys_import.utils.sqlalchemy_utils import UUIDType

Metadata = MetaData(naming_convention=sqlite_naming_convention)
BaseSpatiaLite = declarative_base(metadata=Metadata)


class Privacy(BaseSpatiaLite):
    __tablename__ = constants.PRIVACY
    table_type = TableTypes.REFERENCE
    table_type_id = 22

    privacy_id = Column(UUIDType, primary_key=True, default=uuid4)
    name = Column(String(150), nullable=False, unique=True)
    level = Column(Integer, nullable=False)
    created_date = Column(DateTime, default=datetime.utcnow)


# revision identifiers, used by Alembic.
revision = "b03fb305981b"
down_revision = "f103f27c4575"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("Privacies", schema=None, copy_from=Privacy.__table__) as batch_op:
        batch_op.add_column(sa.Column("level", sa.Integer(), nullable=False, server_default="0"))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("Privacies", schema=None, copy_from=Privacy.__table__) as batch_op:
        batch_op.drop_column("level")
    # ### end Alembic commands ###
