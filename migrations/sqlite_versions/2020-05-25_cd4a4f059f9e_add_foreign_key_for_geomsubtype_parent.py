"""Add foreign key for GeomSubType.parent

Revision ID: cd4a4f059f9e
Revises: 07e4b725c547
Create Date: 2020-05-25 11:00:40.867044

"""
from datetime import datetime
from uuid import uuid4

import sqlalchemy as sa
from alembic import op
from sqlalchemy import (
    CheckConstraint,
    Column,
    DateTime,
    ForeignKey,
    MetaData,
    String,
    UniqueConstraint,
)
from sqlalchemy.orm import declarative_base

import pepys_import
from pepys_import.core.store import constants
from pepys_import.core.store.db_base import sqlite_naming_convention
from pepys_import.core.store.db_status import TableTypes
from pepys_import.utils.sqlalchemy_utils import UUIDType

# revision identifiers, used by Alembic.
revision = "cd4a4f059f9e"
down_revision = "07e4b725c547"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("GeometrySubTypes", schema=None) as batch_op:
        batch_op.alter_column(
            "parent",
            existing_type=sa.INTEGER(),
            type_=pepys_import.utils.sqlalchemy_utils.UUIDType(length=16),
            existing_nullable=False,
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_GeometrySubTypes_parent_GeometryTypes"),
            "GeometryTypes",
            ["parent"],
            ["geo_type_id"],
            onupdate="cascade",
        )

    # ### end Alembic commands ###


def downgrade():
    Metadata = MetaData(naming_convention=sqlite_naming_convention)
    BaseSpatiaLite = declarative_base(metadata=Metadata)

    class GeometrySubType(BaseSpatiaLite):
        __tablename__ = constants.GEOMETRY_SUBTYPE
        table_type = TableTypes.REFERENCE
        table_type_id = 16

        geo_sub_type_id = Column(UUIDType, primary_key=True, default=uuid4)
        name = Column(
            String(150),
            CheckConstraint("name <> ''", name="ck_GeometrySubTypes_name"),
            nullable=False,
        )
        parent = Column(
            UUIDType, ForeignKey("GeometryTypes.geo_type_id", onupdate="cascade"), nullable=False
        )
        created_date = Column(DateTime, default=datetime.utcnow)

        __table_args__ = (
            UniqueConstraint("name", "parent", name="uq_GeometrySubTypes_name_parent"),
        )

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(
        "GeometrySubTypes", schema=None, copy_from=GeometrySubType.__table__
    ) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_GeometrySubTypes_parent_GeometryTypes"), type_="foreignkey"
        )
        batch_op.alter_column(
            "parent",
            existing_type=pepys_import.utils.sqlalchemy_utils.UUIDType(length=16),
            type_=sa.INTEGER(),
            existing_nullable=False,
        )
    # ### end Alembic commands ###
